<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Final Project</title>

    <!-- LINK TO BOOTSTRAP  AND STYLESHEET -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"> 
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js" integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT" crossorigin="anonymous"></script>
    <link href="../PUBLIC/style.css" rel="stylesheet">

    <!-- NAVBAR -->
    <nav class="navbar navbar-expand-sm navbar-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="index.html">ROYAL RESTAURANT</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="mainnavbarSupportedContent">
          <!-- <div class="collapse navbar-collapse" id="navbarSupportedContent"> -->
          <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="starters.html">Starter</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="maincourse.html">Main Course</a>
          </li>			
          <li class="nav-item">
            <a class="nav-link" href="desserts.html">Desserts</a>
          </li>	
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Beverage
            </a>
            <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarDarkDropdownMenuLink">
              <li><a class="dropdown-item" href="soft.html">Soft</a></li>
              <li><a class="dropdown-item" href="cocktails.html">Cocktails</a></li>
              <li><a class="dropdown-item" href="aperitifs.html">Aperitifs</a></li>
              <li><a class="dropdown-item" href="hot.html">Hot Beverage</a></li>
              <li><a class="dropdown-item" href="wine.html">Wine</a></li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="table" href="login.html">Reserve a Table</a>
          </li>	
          </ul>		
        </div>
        <div class="collapse navbar-collapse" id="usernavbarSupportedContent">
          <!-- <div class="collapse navbar-collapse" id="navbarSupportedContent"> -->
          <ul class="navbar-nav ms-auto">
            <li class="nav-item" id="cartIcon">
              <a href="order.html" class="nav-link" id="myorder">My Order(<span id="cartCount">0</span>)</a>
            </li>
            <li class="nav-item">
              <a class="nav-link"><span id="usernameDisplay"></span></a>
            </li>			
            <li class="nav-item">
              <a class="nav-link" id="logout" href="index.html">Logout</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="about.html">About</a>
            </li>			
            <li class="nav-item">
                <a class="nav-link" href="contact.html">Contact</a>
            </li>	
          </ul>
        </div>
     </div>
    </nav>
</head >
<body>

  <br><br><br>
  <h1 class="text-center">To Start</h1>  
  <br>
  <div class="title-starters">
    <div class="grid-container3" id="menuItemsForm">
          <!-- Menu items will be appended here by the JavaScript -->
    </div>
  </div>

    <!-- footer here -->        
    <div class="footer">
      <p>L.Liu @2023</p>
    </div>
    <script src="../PUBLIC/commonscript.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
       function updateOrder(quantityField, itemno, price, remove = false) {
            let orders = JSON.parse(localStorage.getItem('orders')) || {};
            if (remove) {
                  delete orders[itemno];
            } else {
                  orders[itemno] = {quantity: parseInt(quantityField.value), price: price};
            }
            localStorage.setItem('orders', JSON.stringify(orders));
            updateOrderCounter();
      }

      function updateOrderCounter() {
            try {
                  const orders = JSON.parse(localStorage.getItem('orders')) || {};
                  const orderCounter = document.getElementById('cartCount');
                  if (!orderCounter) throw new Error("Element with id 'cartCount' does not exist.");
                  const totalQuantity = Object.values(orders).reduce((sum, order) => {
                        const numericQuantity = Number(order.quantity); // Access the quantity property
                        if (isNaN(numericQuantity)) throw new Error("Found non-numeric quantity.");
                        return sum + numericQuantity;
                  }, 0);
                  orderCounter.textContent = totalQuantity;
            } catch (error) {
                  console.error(error);
            }
      }

      document.addEventListener('DOMContentLoaded', (event) => {
            function createMenuItemRow(menuItem) {
                  const itemno = menuItem.itemno ?? 'No item number';
                  const itemname = menuItem.itemname ?? 'No name';
                  const group = menuItem.group ?? 'No group';
                  const description = menuItem.description ?? 'No description';
                  const price = menuItem.price ?? '0';
                  return `
                  <div class="menu-item" style="display: flex; justify-content: space-between; align-items: center;">
                  <div>
                  <h6>${itemname}</h6>
                  <h6 style="color:rgb(25,84,117);">Rs ${price}</h6>
                  <p>${description}</p>
                  </div>
                  <div>
                  <input type="checkbox" id="menuItem${itemno}" name="menu" value="${itemname}" data-price="${price}">
                  <input class="quantity-input" type="number" id="quantity${itemno}" name="quantity" value="1" style="display: none;" min="1" onchange="updateOrder(this, ${itemno}, ${price})">
                  </div>
                  </div>
                  `;
            }
            
            function toggleQuantityField(checkbox, itemno, price) {
                  const quantityField = document.getElementById('quantity' + itemno);
                  if (checkbox.checked) {
                        quantityField.style.display = 'block';
                        updateOrder(quantityField, itemno, Number(price)); // Parse price to a number
                  } else {
                        quantityField.style.display = 'none';
                        updateOrder(quantityField, itemno, Number(price), true); // Parse price to a number even when removing
                  }
            }
            
            // Fetch the menu items and populate the menu
            fetch('http://localhost:3000/items')
            .then(response => response.json())
            .then(data => {
                  const menuItems = data.items;
                  const grpitems = menuItems.filter(item => item.group === 'Starters' && item.status === true);
                  const container = document.getElementById('menuItemsForm');
                  if (container) {
                        grpitems.forEach(menuItem => {
                              container.innerHTML += createMenuItemRow(menuItem);
                        });
                        enableCheckboxes();
                        attachCheckboxListeners();
                  } else {
                        console.error('Element with ID menuItemsForm not found.');
                  }
            })
            .catch(error => {
                  console.error('Fetch error:', error);
            });
            
            function enableCheckboxes() {
                  var reservationExists = localStorage.getItem('myResaData') !== null;
                  var menuCheckboxes = document.querySelectorAll('input[type="checkbox"][name="menu"]');
                  menuCheckboxes.forEach(function(checkbox) {
                        checkbox.disabled = !reservationExists;
                  });
            }

            function attachCheckboxListeners() {
                  document.querySelectorAll('input[type="checkbox"][name="menu"]').forEach(checkbox => {
                  checkbox.addEventListener('change', function() {
                        const itemno = this.id.replace('menuItem', '');
                        const price = this.dataset.price; // Assuming price is stored as a data attribute on the checkbox
                        toggleQuantityField(this, itemno, price);
                        });
                  });
            }
            
            // Update cart count on page load
            updateOrderCounter();
      });
      </script>
</body>
</html>