<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Final Project</title>

    <!-- LINK TO BOOTSTRAP  AND STYLESHEET -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"> 
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js" integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT" crossorigin="anonymous"></script>
    <link href="/css/style.css" rel="stylesheet">

      <!-- NAVBAR -->
      <nav class="navbar navbar-expand-sm navbar-dark">
        <div class="container-fluid">
          <a class="navbar-brand">ROYAL RESTAURANT</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ms-auto">
              <li class="nav-item" id="cartIcon">
                <a href="/order" class="nav-link" id="myorder">My Order(<span id="cartCount">0</span>)</a>
              </li>
              <li class="nav-item">
                <a class="nav-link"><span id="usernameDisplay"></span></a>
              </li>			
              <li class="nav-item">
                <a class="nav-link" id="logout" href="/">Logout</a>
              </li>
            </ul>
          </div>
        </div>
      </nav>
</head >
<body>
<!-- MENU ITEMS LIST -->

<section class="about" id="modifyitems">
  <br><br><br>
  <div class="title">
    <h1 class="text-center">Modify Menu Items</h1>
    <br>
    <form id="menuItemsForm">
      <div class="row">
            <div class="col-3">
                  <label class="header form-control" contenteditable="true">Item Name</label>
            </div>
            <div class="col-2">
                  <label class="header form-control" contenteditable="true">Group</label>
            </div>
            <div class="col-4">
                  <label class="header form-control" contenteditable="true">Description</label>
            </div>
            <div class="col-1">
                  <label class="header form-control">Price</label>
            </div>
            <div class="col-1">
                  <label class="header form-control" contenteditable="true">Active</label>
            </div>
      </div>
      <div class="row row1">
            <div class="col-3">
                  <input type="text" class="form-control search-input" data-field="itemname" placeholder="Search by Item Name">
            </div>
            <div class="col-2">
                  <select class="form-control" placeholder="Group" data-field="group" placeholder="Search by Group">
                        <option selected></option>
                        <option>Starters</option>
                        <option>Main Course</option>
                        <option>Desserts</option>
                        <option>Soft</option>
                        <option>Cocktails</option>
                        <option>Aperitifs</option>
                        <option>Hot</option>
                        <option>Wine</option>
                  </select>
            </div>
            <div class="col-4">
                  <input type="text" class="form-control search-input" data-field="description" placeholder="Search by Description">
            </div>
            <div class="col-1"></div>
            <div class="col-1 checkbox-container">
                  <input type="checkbox" class="form-check-input search-input" data-field="status" value="checked" checked>
            </div>
      </div>
      <br>
    <!-- Menu items will be inserted here by JavaScript -->
    </form>
      <div class="d-flex justify-content-center gap-5">
          <button type="button" class="btn btn-primary" id="saveButton">Save Changes</button>
      </div>
  </div> 
</section>
    <!-- footer here -->        
    <div class="footer">
      <p>L.Liu @2023</p>
    </div>
      <script src="/js/commonscript.js"></script>
      <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
      <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
      <script>
            // filtering function used by the event listeners to display the selected items as per search field combined
            function filterRows() {
                  const rows = document.querySelectorAll('#menuItemsForm .row:not(:first-child)');
                  const searchText = document.querySelector('input[data-field="itemname"]').value.toLowerCase();
                  const searchDescription = document.querySelector('input[data-field="description"]').value.toLowerCase();
                  const searchGroup = document.querySelector('select[data-field="group"]').options[document.querySelector('select[data-field="group"]').selectedIndex];
                  const searchStatus = document.querySelector('input[data-field="status"][type="checkbox"]').checked;
                  rows.forEach(row => {
                        const itemName = row.querySelector('input[data-field="itemname"]').value.toLowerCase();
                        const description = row.querySelector('input[data-field="description"]').value.toLowerCase();
                        const group = row.querySelector('select[data-field="group"]').options[row.querySelector('select[data-field="group"]').selectedIndex];
                        const status = row.querySelector('input[data-field="status"][type="checkbox"]').checked;
                        const matchText = itemName.includes(searchText);
                        const matchDescription = description.includes(searchDescription);
                        const matchGroup = group.startsWith(searchGroup);
                        const matchStatus = (status === searchStatus);
                        row.style.display = (matchText && matchDescription && matchGroup && matchStatus) ? '' : 'none';
                  });
            }

            // Event listeners for search inputs and status checkbox
            document.querySelectorAll('.search-input').forEach(input => {
                  input.addEventListener('input', filterRows);
            });
            document.querySelector('select[data-field="group"]').addEventListener('change', filterRows);
            document.querySelector('input[data-field="status"][type="checkbox"]').addEventListener('change', filterRows);

            // function to create list of existing items in the DB
            function createMenuItemRow(menuItem, index) {
                  const itemno = menuItem.itemno ?? 'No item number';
                  const itemname = menuItem.itemname ?? 'No name';
                  const group = menuItem.group ?? 'No group';
                  const description = menuItem.description ?? 'No description';
                  const price = menuItem.price ?? '0';
                  const status = menuItem.status ?? false;
                  const checkedAttribute = status ? 'checked' : ''; 
                  const groups = ['Starters', 'Main Course', 'Desserts', 'Soft', 'Cocktails', 'Aperitifs', 'Hot', 'Wine'];
                  let groupOptions = groups.map(group => {
                        return `<option value="${group}" ${group === menuItem.group ? 'selected' : ''}>${group}</option>`;
                  }).join('');
                  return `
                  <div class="mb-3" data-itemno="${itemno}"></div>
                  <div class="col-3">
                        <input type="text" class="form-control" value="${itemname}" data-field="itemname">
                  </div>
                  <div class="col-2">
                        <select class="form-control" data-field="group">
                        ${groupOptions}
                        </select>
                  </div>
                  <div class="col-4">
                        <input type="text" class="form-control" value="${description}" data-field="description">
                  </div>
                  <div class="col-1">
                        <input type="number" class="form-control" value="${price}" data-field="price">
                  </div>
                  <div class="col-1 checkbox-container">
                        <input type="checkbox" class="form-check-input" ${checkedAttribute} data-field="status">
                  </div>
                  `;
            }

            // Fetch and display menu items
            fetch('https://projectbackend-fndm.onrender.com/items')
            .then(response => response.json())
            .then(data => {
                        const menuItems = data.items;
                        const form = document.getElementById('menuItemsForm');
                        menuItems.forEach((menuItem, index) => {
                              const div = document.createElement('div');
                              div.className = 'mb-3 row row1';
                              div.setAttribute('data-itemno', menuItem.itemno);
                              div.innerHTML = createMenuItemRow(menuItem, index);
                              form.appendChild(div);
                        });
                  })
            .catch(error => {
                  console.error('Fetch error:', error);
            });

            //Save changes event listener
            document.getElementById('saveButton').addEventListener('click', function() {
                  const rows = document.querySelectorAll('#menuItemsForm .row:nth-child(n+3)');
                  const items = Array.from(rows).map(row => {
                        // Safely get the value or checked state, providing fallbacks if necessary
                        const safeQuery = (selector, attr) => {
                              const element = row.querySelector(selector);
                              if (element) {
                                    return attr === 'checked' ? element.checked : element.value;
                              } else {
                                    console.error(`Element not found for selector: ${selector}`, row);
                                    return attr === 'checked' ? false : ''; // Provide default values
                              }
                        };
                        return {
                              itemno: row.getAttribute('data-itemno'),
                              itemname: safeQuery('[data-field="itemname"]', 'value'),
                              group: safeQuery('[data-field="group"]', 'value'),
                              description: safeQuery('[data-field="description"]', 'value'),
                              price: safeQuery('[data-field="price"]', 'value'),
                              status: safeQuery('[data-field="status"]', 'checked'),
                        };
                  });

                  fetch('https://projectbackend-fndm.onrender.com/items/updateItems', { 
                        method: 'PUT',
                        headers: {
                              'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ items: items }) 
                  })
                  .then(response => response.json())
                  .then(data => {
                        if(data.message === 'All menu items updated successfully') {
                              alert('Menu items updated successfully!');
                              window.location.href = '/user';
                        } else {
                              alert('Failed to update menu items.');
                        }
                  })
                  .catch(error => {
                        console.error('Error:', error);
                  });                         
            });
      </script>
    </body>
</html>